/*% Need to ensure that data is longer
% than the filter length
M=16;    % downsampling factor
fs = 500;
fs_down = fs/M; 
redSamples = RED;
decimatedRed = decimate(redSamples,M); 
irSamples = IR;
dec_ind=((1:round(length(redSamples)/M))*M)+1;

[B_LP,A_LP] = butter(1,0.2/(fs/2));
[B_HP,A_HP] = butter(1,[0.5 2.5]/(fs/2));
[B_HP_down,A_HP_down] = butter(1,[0.5 2.5]/(fs_down/2));
[B_LP_down,A_LP_down] = butter(1,0.2/(fs_down/2));

hpfilter = impz(B_HP,A_HP);
lpfilter = impz(B_LP,A_LP);
hpfilter_down= impz(B_HP_down,A_HP_down);
lpfilter_down = impz(B_LP_down,A_LP_down);*/

const uint16 DECIMATION_FACTOR = 16;
#define HP_FILTER_LENGTH 47
#define LP_FILTER_LENGTH 246
#define MAX_FILTER_LENGTH MAX(HP_FILTER_LENGTH,LP_FILTER_LENGTH)

const double hpfilter[] = 
{0.169308,0.274112,0.162504,0.081803,0.024963,-0.013689,-0.038672,-0.053557,-0.061132,-0.063552,
-0.062459,-0.059090,-0.054358,-0.048925,-0.043259,-0.037678,-0.032391,-0.027521,-0.023135,-0.019253,
-0.015870,-0.012960,-0.010486,-0.008406,-0.006674,-0.005245,-0.004078,-0.003134,-0.002376,-0.001775,
-0.001301,-0.000933,-0.000650,-0.000436,-0.000275,-0.000157,-0.000073,-0.000014,0.000026,0.000051,
0.000065,0.000072,0.000074,0.000071,0.000067,0.000061,0.000055}; // 47 Points of every 16th Sample

const double lpfilter[] = 
{0.019713,0.038648,0.037124,0.035661,0.034255,0.032904,0.031607,0.030361,0.029164,0.028014,
0.026910,0.025849,0.024830,0.023851,0.022910,0.022007,0.021139,0.020306,0.019505,0.018736,
0.017998,0.017288,0.016607,0.015952,0.015323,0.014719,0.014139,0.013581,0.013046,0.012531,
0.012037,0.011563,0.011107,0.010669,0.010248,0.009844,0.009456,0.009083,0.008725,0.008381,
0.008051,0.007734,0.007429,0.007136,0.006854,0.006584,0.006325,0.006075,0.005836,0.005606,
0.005385,0.005172,0.004968,0.004773,0.004584,0.004404,0.004230,0.004063,0.003903,0.003749,
0.003601,0.003459,0.003323,0.003192,0.003066,0.002945,0.002829,0.002718,0.002610,0.002508,
0.002409,0.002314,0.002223,0.002135,0.002051,0.001970,0.001892,0.001818,0.001746,0.001677,
0.001611,0.001547,0.001486,0.001428,0.001372,0.001318,0.001266,0.001216,0.001168,0.001122,
0.001077,0.001035,0.000994,0.000955,0.000917,0.000881,0.000846,0.000813,0.000781,0.000750,
0.000721,0.000692,0.000665,0.000639,0.000614,0.000589,0.000566,0.000544,0.000522,0.000502,
0.000482,0.000463,0.000445,0.000427,0.000410,0.000394,0.000379,0.000364,0.000349,0.000336,
0.000322,0.000310,0.000297,0.000286,0.000274,0.000264,0.000253,0.000243,0.000234,0.000224,
0.000216,0.000207,0.000199,0.000191,0.000184,0.000176,0.000169,0.000163,0.000156,0.000150,
0.000144,0.000139,0.000133,0.000128,0.000123,0.000118,0.000113,0.000109,0.000105,0.000100,
0.000096,0.000093,0.000089,0.000085,0.000082,0.000079,0.000076,0.000073,0.000070,0.000067,
0.000065,0.000062,0.000060,0.000057,0.000055,0.000053,0.000051,0.000049,0.000047,0.000045,
0.000043,0.000041,0.000040,0.000038,0.000037,0.000035,0.000034,0.000033,0.000031,0.000030,
0.000029,0.000028,0.000027,0.000026,0.000025,0.000024,0.000023,0.000022,0.000021,0.000020,
0.000019,0.000019,0.000018,0.000017,0.000016,0.000016,0.000015,0.000015,0.000014,0.000013,
0.000013,0.000012,0.000012,0.000011,0.000011,0.000011,0.000010,0.000010,0.000009,0.000009,
0.000009,0.000008,0.000008,0.000008,0.000007,0.000007,0.000007,0.000007,0.000006,0.000006,
0.000006,0.000006,0.000005,0.000005,0.000005,0.000005,0.000005,0.000004,0.000004,0.000004,
0.000004,0.000004,0.000004,0.000003,0.000003,0.000003,0.000003,0.000003,0.000003,0.000003,
0.000003,0.000002,0.000002,0.000002,0.000002,0.000002}; // 246 Points of every 16th Sample